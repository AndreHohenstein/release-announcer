name: Announce GitHub Release on X

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  announce:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python (latest stable 3.x)
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Ensure jq is available
        run: |
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y jq
          fi

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Scan GitHub releases
        run: python src/scan_release.py
        env:
          GH_USER: ${{ secrets.GH_USER }}
          GH_PAT:  ${{ secrets.GH_PAT }}

      - name: Post announcements to X (debug-aware)
        env:
          DEBUG_MODE:             ${{ secrets.DEBUG_MODE }}
          X_API_KEY:              ${{ secrets.X_API_KEY }}
          X_API_SECRET:           ${{ secrets.X_API_SECRET }}
          X_ACCESS_TOKEN:         ${{ secrets.X_ACCESS_TOKEN }}
          X_ACCESS_TOKEN_SECRET:  ${{ secrets.X_ACCESS_TOKEN_SECRET }}
        run: |
          if [ -s state/pending.json ] && [ "$(jq length state/pending.json)" -gt 0 ]; then
            for i in $(jq -r 'range(length)' state/pending.json); do
              BODY=$(jq -r ".[$i].body" state/pending.json)
              URL=$(jq -r  ".[$i].url"  state/pending.json)

              if [ "${DEBUG_MODE}" = "true" ]; then
                echo "🛠 Debug mode active – would post: ${BODY} (${URL})"
              else
                echo "📢 Posting: ${BODY}"
                RELEASE_BODY="${BODY}" RELEASE_URL="${URL}" python src/post_to_x.py
              fi
            done
            echo "[]" > state/pending.json
          else
            echo "ℹ️ No pending releases found – skipping post step."
          fi
